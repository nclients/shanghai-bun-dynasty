---
import { getImagesFromFolder } from "../utils/readImages";

const { section } = Astro.props;
const images = await getImagesFromFolder("/public/" + section.folderPath);
const basePath = import.meta.env.VITE_BASE_URL || "";
---

<!-- <span>{basePath}</span>
<span>{images[0].src}</span> -->
<section
  id={`${!section.isSeparatePage ? "gallery" : ""}`}
  class="py-8 sm:py-12 md:py-16"
>
  {
    section.mode === 1 && (
      <div class="bg-white py-32">
        <div class="mx-auto max-w-7xl px-6 text-center lg:px-8">
          <div class="mx-auto max-w-2xl">
            <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">
              {section.title.includes("<br/>")
                ? section.title
                    .split("<br/>")
                    .map((line: string, index: number) => (
                      <Fragment key={index}>
                        <span class="block">{line}</span>
                      </Fragment>
                    ))
                : section.title}
            </h2>
            <p class="mt-4 text-lg leading-8 text-gray-600">
              {section.description.includes("<br/>")
                ? section.title
                    .split("<br/>")
                    .map((line: string, index: number) => (
                      <Fragment key={index}>
                        <span class="block">{line}</span>
                      </Fragment>
                    ))
                : section.description}
            </p>
          </div>

          <ul
            role="list"
            class="mx-auto mt-8 sm:mt-20 grid max-w-2xl grid-cols-1 gap-x-8 gap-y-16 sm:grid-cols-2 lg:mx-0 lg:max-w-none lg:grid-cols-3"
          >
            {images?.map((item, index) => (
              <Fragment key={index}>
                <li>
                  <img
                    src={basePath + item.src.replace("/public", "")}
                    alt={item.name}
                    class={`mx-auto h-56 w-56 rounded-${section.menuItemImgRounded} hover:scale-105 duration-300`}
                  />
                  <h3 class="mt-6 text-base font-semibold leading-7 tracking-tight text-gray-900">
                    {item.name}
                  </h3>
                </li>
              </Fragment>
            ))}
          </ul>
        </div>
      </div>
    )
  }

  {
    section.mode === 2 && (
      <div style={`background-color:${section.bgColor}`}>
        <div class="mx-auto max-w-7xl px-6 lg:px-8">
          <div class="mx-auto max-w-2xl">
            <h2
              class="text-3xl font-bold tracking-tight sm:text-4xl"
              style={`color: ${section.tetleColor}`}
            >
              {section.title.includes("<br/>")
                ? section.title
                    .split("<br/>")
                    .map((line: string, index: number) => (
                      <Fragment key={index}>
                        <span class="block">{line}</span>
                      </Fragment>
                    ))
                : section.title}
            </h2>
            <p class="mt-4 text-lg leading-8 text-gray-400">
              {section.description.includes("<br/>")
                ? section.title
                    .split("<br/>")
                    .map((line: string, index: number) => (
                      <Fragment key={index}>
                        <span class="block">{line}</span>
                      </Fragment>
                    ))
                : section.description}
            </p>
          </div>
          <ul
            role="list"
            class="mx-auto mt-8 sm:mt-20 grid max-w-2xl grid-cols-1 gap-6 sm:grid-cols-2 lg:mx-0 lg:max-w-none lg:grid-cols-3 lg:gap-8"
          >
            {images?.map((item, index) => (
              <Fragment key={index}>
                <li class="rounded-2xl bg-gray-800 px-8 py-10">
                  <img
                    src={basePath + item.src.replace("/public", "")}
                    alt={item.name}
                    class={`mx-auto h-48 w-48 md:h-56 md:w-56 rounded-full object-cover hover:scale-105 duration-300`}
                  />
                  <h3 class="mt-6 text-base font-semibold leading-7 tracking-tight text-white">
                    {item.name}
                  </h3>
                </li>
              </Fragment>
            ))}
          </ul>
        </div>
      </div>
    )
  }

  {
    section.mode === 3 && (
      <div style={`background-color:${section.bgColor}`}>
        <div class="mx-auto max-w-7xl px-6 lg:px-8">
          <div class="flex flex-col justify-center items-center mx-auto max-w-2xl">
            <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">
              {section.title.includes("<br/>")
                ? section.title
                    .split("<br/>")
                    .map((line: string, index: number) => (
                      <Fragment key={index}>
                        <span class="block">{line}</span>
                      </Fragment>
                    ))
                : section.title}
            </h2>
            <p class="mt-4 text-lg leading-8 text-gray-600">
              {section.description.includes("<br/>")
                ? section.title
                    .split("<br/>")
                    .map((line: string, index: number) => (
                      <Fragment key={index}>
                        <span class="block">{line}</span>
                      </Fragment>
                    ))
                : section.description}
            </p>
          </div>
          <ul
            role="list"
            class="mx-auto mt-8 sm:mt-12 md:mt-20 grid max-w-2xl grid-cols-1 gap-x-8 gap-y-14 sm:grid-cols-2 lg:mx-0 lg:max-w-none lg:grid-cols-3 xl:grid-cols-4"
          >
            {images?.map((item, index) => (
              <Fragment key={index}>
                <li>
                  <img
                    src={basePath + item.src.replace("/public", "")}
                    alt={item.name}
                    class={`aspect-[14/13] w-full rounded-2xl object-cover rounded-${section.menuItemImgRounded} hover:scale-105 duration-300`}
                  />
                  {section.showImgName ? (
                    <div
                      class="mt-6 text-lg leading-8 tracking-tight"
                      style={`color: ${section.imgNameColor}`}
                    >
                      {item.name}
                    </div>
                  ) : null}
                </li>
              </Fragment>
            ))}
          </ul>
        </div>
      </div>
    )
  }
</section>
